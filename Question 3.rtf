{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs28 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Express and Vue have different roles in a web application but work together to create a smooth user experience. Express is a backend framework used for handling the server-side of the app. It processes requests from the frontend, interacts with the database, and sends back the necessary data. For example, in an app like "Would You Rather," Express would handle tasks like saving users' answers and updating the information.\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Vue, on the other hand, is a frontend framework that focuses on creating the parts of the app users see and interact with. It is responsible for showing questions, capturing users' answers, and updating the display in real time. When a user answers a question, Vue sends the answer to Express via an API call, and when Express sends back updated information (like the results), Vue updates the UI to reflect that.\
In summary, Express manages the data and logic on the server, while Vue handles what the user sees and interacts with on the front end. The two communicate through API calls, with Vue making requests to Express and displaying the data it receives. Together, they make the app functional and interactive.
\fs24 \
}